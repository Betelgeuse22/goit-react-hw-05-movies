{"version":3,"file":"static/js/828.1737eca2.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CAAEC,GADsD,EAA7BA,GACrBC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN2B,2CAAH,qDASdC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCW,EADhC,2BADM,cACvBR,EADuB,yBAItBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CAAEC,GADsD,EAA7BA,GACrBC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN4B,2CAAH,sDASfG,EAAe,mCAAG,WAAML,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,EADd,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfS,EAAO,mCAAG,WAAMN,GAAN,uFACEL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAFxB,cACfG,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOPU,EAAU,mCAAG,WAAMP,GAAN,uFACDL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAFrB,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,iHC6CvB,UArEqB,WAAO,IAAD,IACjBG,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAAwCS,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAUvC,IARAC,EAAAA,EAAAA,YAAU,YACSX,EAAAA,EAAAA,IAAgBL,GAE9BiB,OACAA,MAAK,SAAAC,GAAI,OAAIP,EAAgBO,EAApB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACpB,IAECU,EAAL,CACA,IAAQT,EACNS,EADMT,MAAOsB,EACbb,EADaa,aAAcC,EAC3Bd,EAD2Bc,aAAcC,EACzCf,EADyCe,OAAQC,EACjDhB,EADiDgB,SAAUxB,EAC3DQ,EAD2DR,YAGvDyB,EAAcJ,EAAaK,MAAM,EAAG,GAE1C,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIjB,EAAV,sBACA,4BACE,gBACEkB,IACE5B,EAAW,yCAC2BA,GAClC6B,EAENC,IAAK/B,EACLgC,MAAO,OAET,4BACE,0BACGhC,EADH,KACY0B,EADZ,QAGA,2CAEGH,EAAeU,KAAKC,OAAsB,GAAfX,GAAmBY,QAAQ,GAAK,GAF9D,QAIA,sCACA,6BAAKV,MACL,oCACA,uBAAID,EAASA,EAAO1B,KAAI,SAAAsC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAAQ,YAG9D,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASV,GAAG,UAAUf,MAAO,CAAEC,KAAMH,GAArC,UACE,wCAGJ,yBACE,SAAC,KAAD,CAASiB,GAAG,OAAOf,MAAO,CAAEC,KAAMH,GAAlC,UACE,2CAKR,SAAC,EAAA4B,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAjDmB,CAqD1B,C","sources":["Api.js","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0766ad1a9e2f3e7f7c2322da00176fb0';\n\nexport const getFetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import {\n  useParams,\n  useLocation,\n  Link,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport noImage from '../images/no-image.jpg';\n\nimport { getMovieDetails } from '../Api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const responce = getMovieDetails(id);\n    responce\n      .then()\n      .then(resp => setMovieDetails(resp))\n      .catch(error => console.log(error));\n  }, [id]);\n\n  if (!movieDetails) return;\n  const { title, release_date, vote_average, genres, overview, poster_path } =\n    movieDetails;\n\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <div>\n      <Link to={goBack}>Go back</Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : noImage\n          }\n          alt={title}\n          width={240}\n        />\n        <div>\n          <h2>\n            {title} ({releaseDate})\n          </h2>\n          <p>\n            User Score:&nbsp;\n            {vote_average ? Math.fround(vote_average * 10).toFixed(0) : ''}%\n          </p>\n          <h3>Overview</h3>\n          <p> {overview}</p>\n          <h3>Genres</h3>\n          <p>{genres ? genres.map(genre => genre.name).join(', ') : ''}</p>\n        </div>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: goBack }}>\n              <p>Reviews</p>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"cast\" state={{ from: goBack }}>\n              <p>Cast</p>\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","getFetchMovies","axios","response","data","results","map","id","title","poster_path","getSearchMovies","searchValue","getMovieDetails","getCast","getReviews","useParams","useState","movieDetails","setMovieDetails","goBack","useLocation","state","from","useEffect","then","resp","catch","error","console","log","release_date","vote_average","genres","overview","releaseDate","slice","to","src","noImage","alt","width","Math","fround","toFixed","genre","name","join","Suspense","fallback"],"sourceRoot":""}
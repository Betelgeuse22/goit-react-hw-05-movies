{"version":3,"file":"static/js/186.3f0b817d.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CAAEC,GADsD,EAA7BA,GACrBC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN2B,2CAAH,qDASdC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCW,EADhC,2BADM,cACvBR,EADuB,yBAItBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CAAEC,GADsD,EAA7BA,GACrBC,MADkD,EAAzBA,MAClBC,YAD2C,EAAlBA,YAE9C,KAN4B,2CAAH,sDASfG,EAAe,mCAAG,WAAML,GAAN,uFACNL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,oBACcP,EADd,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfS,EAAO,mCAAG,WAAMN,GAAN,uFACEL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAFxB,cACfG,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOPU,EAAU,mCAAG,WAAMP,GAAN,uFACDL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAQ,EADA,4BACsBP,IAFrB,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,kFCVvB,UAvBgB,WACd,IAAQG,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAA8BS,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,IAHAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWP,GAAIa,MAAK,SAAAC,GAAI,OAAIH,EAAWG,EAAKhB,QAApB,GACzB,GAAE,CAACE,IACCU,EAEL,OAAOA,EAAQK,OAAS,GACtB,wBACGL,EAAQX,KAAI,gBAAGC,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,6BAAKC,EAAL,SAFOjB,EADE,OAQf,kEAEH,C","sources":["Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0766ad1a9e2f3e7f7c2322da00176fb0';\n\nexport const getFetchMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getSearchMovies = async searchValue => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, poster_path };\n  });\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { getReviews } from '../../Api';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState();\n\n  useEffect(() => {\n    getReviews(id).then(resp => setReviews(resp.results));\n  }, [id]);\n  if (!reviews) return;\n\n  return reviews.length > 0 ? (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>\"{content}\"</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We don't have any review for this movie</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getFetchMovies","axios","response","data","results","map","id","title","poster_path","getSearchMovies","searchValue","getMovieDetails","getCast","getReviews","useParams","useState","reviews","setReviews","useEffect","then","resp","length","author","content"],"sourceRoot":""}